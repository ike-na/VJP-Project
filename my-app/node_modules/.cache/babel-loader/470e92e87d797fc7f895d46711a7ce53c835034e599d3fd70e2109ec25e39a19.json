{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iikka\\\\Desktop\\\\Verkkojulkaisun perusteet\\\\lopputy\\xF6\\\\VJP-Project\\\\my-app\\\\src\\\\comments\\\\comments.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport CommentForm from \"./commentform\";\nimport Comment from \"./comment\";\nimport { getComments as getCommentsApi, createComment as createCommentApi, updateComment as updateCommentApi, deleteComment as deleteCommentApi } from \"../commentapi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = _ref => {\n  _s();\n  let {\n    commentsUrl,\n    currentUserId\n  } = _ref;\n  const [backendComments, setBackendComments] = useState([]);\n  const [activeComment, setActiveComment] = useState(null);\n  const rootComments = backendComments.filter(backendComment => backendComment.parentId === null);\n  const getReplies = commentId => backendComments.filter(backendComment => backendComment.parentId === commentId).sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\n  const addComment = (text, parentId) => {\n    createCommentApi(text, parentId).then(comment => {\n      setBackendComments([comment, ...backendComments]);\n      setActiveComment(null);\n    });\n  };\n  const updateComment = (text, commentId) => {\n    updateCommentApi(text).then(() => {\n      const updatedBackendComments = backendComments.map(backendComment => {\n        if (backendComment.id === commentId) {\n          return {\n            ...backendComment,\n            body: text\n          };\n        }\n        return backendComment;\n      });\n      setBackendComments(updatedBackendComments);\n      setActiveComment(null);\n    });\n  };\n  const deleteComment = commentId => {\n    if (window.confirm(\"Are you sure you want to remove comment?\")) {\n      deleteCommentApi().then(() => {\n        const updatedBackendComments = backendComments.filter(backendComment => backendComment.id !== commentId);\n        setBackendComments(updatedBackendComments);\n      });\n    }\n  };\n  useEffect(() => {\n    getCommentsApi().then(data => {\n      setBackendComments(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"comments-title\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form-title\",\n      children: \"Write comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      submitLabel: \"Write\",\n      handleSubmit: addComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-container\",\n      children: rootComments.map(rootComment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: rootComment,\n        replies: getReplies(rootComment.id),\n        activeComment: activeComment,\n        setActiveComment: setActiveComment,\n        addComment: addComment,\n        deleteComment: deleteComment,\n        updateComment: updateComment,\n        currentUserId: currentUserId\n      }, rootComment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"Nh9uypyQCza2uraZ+lh8htJiD1M=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","CommentForm","Comment","getComments","getCommentsApi","createComment","createCommentApi","updateComment","updateCommentApi","deleteComment","deleteCommentApi","jsxDEV","_jsxDEV","Comments","_ref","_s","commentsUrl","currentUserId","backendComments","setBackendComments","activeComment","setActiveComment","rootComments","filter","backendComment","parentId","getReplies","commentId","sort","a","b","Date","createdAt","getTime","addComment","text","then","comment","updatedBackendComments","map","id","body","window","confirm","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","submitLabel","handleSubmit","rootComment","replies","_c","$RefreshReg$"],"sources":["C:/Users/iikka/Desktop/Verkkojulkaisun perusteet/lopputyÃ¶/VJP-Project/my-app/src/comments/comments.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport CommentForm from \"./commentform\";\r\nimport Comment from \"./comment\";\r\nimport {\r\n  getComments as getCommentsApi,\r\n  createComment as createCommentApi,\r\n  updateComment as updateCommentApi,\r\n  deleteComment as deleteCommentApi,\r\n} from \"../commentapi\";\r\n\r\nconst Comments = ({ commentsUrl, currentUserId }) => {\r\n  const [backendComments, setBackendComments] = useState([]);\r\n  const [activeComment, setActiveComment] = useState(null);\r\n  const rootComments = backendComments.filter(\r\n    (backendComment) => backendComment.parentId === null\r\n  );\r\n  const getReplies = (commentId) =>\r\n    backendComments\r\n      .filter((backendComment) => backendComment.parentId === commentId)\r\n      .sort(\r\n        (a, b) =>\r\n          new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\r\n      );\r\n  const addComment = (text, parentId) => {\r\n    createCommentApi(text, parentId).then((comment) => {\r\n      setBackendComments([comment, ...backendComments]);\r\n      setActiveComment(null);\r\n    });\r\n  };\r\n\r\n  const updateComment = (text, commentId) => {\r\n    updateCommentApi(text).then(() => {\r\n      const updatedBackendComments = backendComments.map((backendComment) => {\r\n        if (backendComment.id === commentId) {\r\n          return { ...backendComment, body: text };\r\n        }\r\n        return backendComment;\r\n      });\r\n      setBackendComments(updatedBackendComments);\r\n      setActiveComment(null);\r\n    });\r\n  };\r\n  const deleteComment = (commentId) => {\r\n    if (window.confirm(\"Are you sure you want to remove comment?\")) {\r\n      deleteCommentApi().then(() => {\r\n        const updatedBackendComments = backendComments.filter(\r\n          (backendComment) => backendComment.id !== commentId\r\n        );\r\n        setBackendComments(updatedBackendComments);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCommentsApi().then((data) => {\r\n      setBackendComments(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"comments\">\r\n      <h3 className=\"comments-title\">Comments</h3>\r\n      <div className=\"comment-form-title\">Write comment</div>\r\n      <CommentForm submitLabel=\"Write\" handleSubmit={addComment} />\r\n      <div className=\"comments-container\">\r\n        {rootComments.map((rootComment) => (\r\n          <Comment\r\n            key={rootComment.id}\r\n            comment={rootComment}\r\n            replies={getReplies(rootComment.id)}\r\n            activeComment={activeComment}\r\n            setActiveComment={setActiveComment}\r\n            addComment={addComment}\r\n            deleteComment={deleteComment}\r\n            updateComment={updateComment}\r\n            currentUserId={currentUserId}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}